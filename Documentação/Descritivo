Descritivo

O processo de funcionamento da Magazine é composto por: 

1. Definição das configurações do processo pelo operador (através da IHM física ou do Aplicativo Web)
2. Envio das configurações e início de processo do Esp32 para o Arduino
3. Controle do processo realizado pelo Arduino, com comunicação com o Robô
4. Envio de informações do processo e do estado da Magazine do Arduino para o Esp32
5. Envio de informações do processo e do estado da Magazine do Esp32 para a IHM IHM física e Aplicativo Web


As etapas são descritas com mais informações abaixo:

1. Definição das configurações do processo pelo operador (através da IHM física ou do Aplicativo Web)
  O operador pode personalizar o processo de movimentação das peças. É possível definir as seguintes possibilidades:
   1. Qual tipo se peça será movimentada; 
   2. Em qual prateleira o robô colocará cada tipo de peça;
   3. A sequência da movimentação das peças: movimentando um tipo de peça por vez e seguindo a ordem das posições na Magazine (definido como tipo "Sequência"), ou alternar entre os tipos de peça e escolhendo uma posição aleatória entre as disponíveis na Magazine (definido como tipo "Aleatório");
   4. A quantidade de repetições, ou ciclos, que será realizada;
   5. Caso o processo não realize ciclos, é possível escolher se as peças serão colocadas ou removidas da Magazine, se houver peças disponíveis para realizar esses movimentos.
  
  Após definir como o processo irá se comportar, o operador pode acionar o comando de iniciar o processo para começar a movimentação das peças. Durante o funcionamento, há a opção de acionar o comando de "zerar ciclos", que irá parar o processo após o término do ciclo que está sendo realizado.

  No Aplicativo Web, a função de personalizar o processo, iniciar e zerar ciclos só podem ser utilizadas por um usuário com perimssão para realizar essas ações.


2. Envio das configurações e início de processo do Esp32 para o Arduino
  A cominucação entre Arduino e Esp32 é realizada através da porta Serial dos dispositivos. O Esp32 envia as informações em uma mensagem seguindo um padrão que é interpretado pelo Arduino, com cada informação sepadara com um caracter específico. 
  As configurações são enviadas quando o operador aperta o botão de iniciar processo, ou quando o Esp32 recebe esse comando do aplicativo web.

  Um exemplo de mensagem que pode ser enviada é: [1,0,1,0,1,2,c,s,5]

  O Arduiuno interpreta a mensagem como:
  '[' - indica o início da mensagem
  ']' - indica o fim da mensagem
  ',' - indica o fim da informação anterior, usado como separador entre as informações enviadas

  As primeiras três informações lidas se referem a se as peças de cada tipo estão habilitadas para movimentação (0 [falso] ou 1 [verdadeiro]); da 4ª à 6ª, às prateleiras de cada tipo de peça (0, 1 ou 2); a 7ª, ao tipo de movimento a ser realizado (Colocar ou Remover peças); a 8ª, ao tipo de sequência a ser seguida (Sequência ou Aleatório); e a 9ª, à quantidade de ciclos a serem realizados.

  O Arduino irá receber a mensagem acima e definir que as configurações do processo são:
  - Movimentação de Peças Vermelhas: Habilitado (recebeu a informação '1');
  - Movimentação de Peças Pretas:  Desabilitado (recebeu a informação '0');
  - Movimentação de Peças Vermelhas: Habilitado (recebeu a informação '1');

  - Prateleira para qual serão movimentadas as Peças Vermelhas: 1 (recebeu a informação '0');
  - Prateleira para qual serão movimentadas as Peças Pretas:    2 (recebeu a informação '1');
  - Prateleira para qual serão movimentadas as Peças Metálicas: 3 (recebeu a informação '2');

  - Tipo de Movimento a ser realizado: Colocar Peças (recebeu a informação 'c');
  - Tipo de Sequência a ser seguida: Sequência (recebeu a informação 's');
  - Quantidade de Ciclos a serem realizados: 5 (recebeu a informação '5');

  Para iniciar o processo, o Esp32 envia o caracter '!' pela porta Serial.


3. Controle do processo realizado pelo Arduino, com comunicação com o Robô
  Antes de iniciar o processo, o Arduino recebe as configurações com os valores das variáveis que irá utilizar no algorítimo. Quando o Arduino recebe o caracter '!' pela porta Serial, o processo é iniciado.
  Durente o processo, o Arduino pode receber o caracter '?', representando o comando de "Zerar Ciclos", que reduz a quantidade de ciclos restantes atá o fim do processo apra que ele termine ao fim do ciclo que está sendo feito no momento.
  A lógica seguida pelo software para a execução dos movimentos é a seguinte:
 
  1: Identificação do número de ciclos. 
    Caso seja entre 1 e 10, realiza a quantidade de ciclos recebida; caso seja 200, realiza os ciclos até que o Arduino receba o comando de "Zerar Ciclos"; caso seja 150, realiza apenas o movimento de colocar ou de remover peças da Magazine.

  2: Verificação do tipo de movimento. 
    Seleciona a função que será usada na etapa atual, dependendo do tipo de movimento: Colocar ou Remover as peças. Caso o processo esteja sendo executado em ciclos, ao terminar as etapas de encher ou esvaziar a Magazine, inverte o tipo de movimento para a próxima etapa.

  Para realizar a movimentação das peças, o software utiliza funções de seleção e de verificação de movimentos:

  - Verificação da Magazine: retorna verdadeiro caso a posição na qual se quer colocar uma peça esteja vazia, e quando tem uma peça na posição na qual se quer removê-la. Caso contrário, retorna falso e interrompe o processo.

  - Verificação da Base do Robô: retorna verdadeiro caso a posição na qual se quer colocar uma peça esteja vazia, e a coluna tenha a quantidade necessária de peças nas posições abaixo da atual (para não soltar uam peça no ar); e quando tem uma peça na posição na qual se quer removê-la, e as posições acima da desejada estejam vazias (para a garra não bater em outras peças). Caso contrário, retorna falso e interrompe o processo.

  Essas funções são uma garantia de que um movimento errado não será realizado pelo robô, o que poderia causar estragos no projeto.

  - Seleção de Movimento. As funções para selecionar o movimento do robô consistem em ativar 6 relês em uma ordem específica, enviando um conjunto de 6 sinais de 0 (relês desativados) e 1 (relês ativados), gerando uma sequência binária. Cada código binário tem um movimento correspondente, que o robô executa após ler esses sinais. As sequências utilizadas e seus moviemntos podem ser encontrados em detalhe no anexo X.


  3: Movimentação de Peças em Sequência.
    .

      3.1: colocar

      3.2: remover


  4: Movimentação de Peças de forma Aleatória.

      4.1: func aleatorio

      4.2: colocar

      4.3: remover

  5: 








4. Envio de informações do processo e do estado da Magazine do Arduino para o Esp32
  Novamente usa-se a comunicação Serial para enviar dados entre os dispositivos. O Arduino informa o Esp32 se o processo está em execução, se o robô está ou não em movimento, e a quantidade de ciclos restantes para o término do processo, além de enviar uma mensagem smepre que uma peça é colocada ou retirada de uma posição da Magazine.

  Exemplo de mensagem sobre o processo: {1,1,3}
  '{' - indica o início da mensagem
  '}' - indica o fim da mensagem
  ',' - indica o fim da informação anterior, usado como separador entre as informações enviadas

  A 1ª informação lida se refere a se o processo está ou não em execução, a 2ª, a se o robô está em movimento ou parado; e a 3ª, ao número de ciclos restantes.

  O Esp32 irá receber a mensagem acima e definir que:
  - O processo está em execução (recebeu a informação '1');
  - O robô está em movimento (recebeu a informação '1');
  - Restam 3 ciclos para acabar o processo atual (recebeu a informação '3');

  Exemplo de mensagem sobre a Magazine: <1;1;V>
  '<' - indica o início da mensagem;
  '>' - indica o fim da mensagem;
  ';' - indica o fim da informação anterior, usado como separador entre as informações enviadas;

  A 1ª informação lida se refere ao número da prateleira, a 2ª, ao número da posição, e a 3ª, ao tipo de peça (pode receber 'V' para peças vermelhas, 'P' para peças pretas, 'M' para peças metálicas, e '-' quando a posição está vazia).

  O Esp32 irá receber a mensagem acima e definir que:
  - A segunda posição da segunda prateleira agora está ocupada com uma peça Vermelha (os índices de peças e prateleiras iniciam em 0, por isso a primeira posição é '0', a segunda é '1', e assim por diante).


5. Envio de informações do processo e do estado da Magazine do Esp32 para a IHM física e Aplicativo Web
  Toda vez que recebe novas informações sobre o processo, configurações (da IHM física), e posições da Magazine, o Esp32 as atualiza no banco de dados do Firebase (Realtime Database) utilizando as funções da bibloteca Firebase Esp Client.
  As telas da IHM física também são atualizadas com essas mesmas informações: a tela "Sobre", mostrando o estado do processo; a tela "Configurações", onde o operador pode personalizar o funcionamento do processo; e a tela "Informações", que mostra detalhes do projeto e instruções sobre como usar a IHM física.



Firebase e Esp32



Para salvar e receber informações 
